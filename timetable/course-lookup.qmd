---
title: "2026 Academic Timetable Course Lookup"
format: 
  html:
    theme: bootstrap
    css: custom.css
    toc: false
---

```{r setup, include=FALSE}
library(jsonlite)
library(dplyr)
library(DT)
library(htmltools)

# Read the timetable data
timetable_data <- fromJSON("timetable_data.json")
timetable_df <- as.data.frame(timetable_data)

# Extract course prefixes for dropdown
unique_prefixes <- sort(unique(substr(timetable_df$course, 1, 4)))
```

```{css, echo=FALSE}
.search-panel {
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    padding: 20px;
    margin-bottom: 20px;
    border: 1px solid #dee2e6;
}

.results-panel {
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    padding: 20px;
    border: 1px solid #dee2e6;
}

body {
    background-color: #f8f9fa;
}

.form-control, .form-select {
    border-radius: 6px;
    margin-bottom: 15px;
}

#courseTable {
    font-size: 14px;
}

.instructions-panel {
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    padding: 20px;
    margin-top: 20px;
    border: 1px solid #dee2e6;
}
```

::: {.container-fluid}

::: {.row}

::: {.col-md-3}
::: {.search-panel}

### Find Course

**Enter Full Course Code:**
```{html}
<input type="text" class="form-control" id="fullCourseCode" 
       placeholder="e.g., ACCY231 or mmpa502">
```

---

**OR Select Step by Step:**

**Course Prefix:**
```{html}
<select class="form-select" id="coursePrefix">
    <option value="">Select...</option>
</select>
```

**Course Number:**
```{html}
<select class="form-select" id="courseNumber" disabled>
    <option value="">Select...</option>
</select>
```

:::
:::

::: {.col-md-9}
::: {.results-panel}

### Course Information {#courseHeader}

::: {#tableContainer}
```{r, echo=FALSE}
# Create empty datatable that will be populated by JavaScript
datatable(
  data.frame(
    CRN = character(0),
    Type = character(0), 
    Students = character(0),
    Dates = character(0),
    Room = character(0),
    Start = character(0),
    Finish = character(0),
    Days = character(0)
  ),
  options = list(
    dom = 't',
    pageLength = -1,
    scrollX = TRUE,
    columnDefs = list(
      list(targets = 3, width = '120px') # Make Dates column wider
    )
  ),
  rownames = FALSE,
  elementId = "courseTable"
)
```

::: {#noResults style="display: none;"}
::: {.alert .alert-info}
No course information found. Please check the course code.
:::
:::

:::

:::
:::

:::

::: {.instructions-panel}

## Instructions

**Two ways to find your course:**

**Option 1 - Quick Search:** Type the full course code directly (e.g., ACCY231, mmpa502, BILD101)

**Option 2 - Step by Step:**

1. **Select Course Prefix:** Choose the first four characters (e.g., ACCY, MMPA, BILD)  
2. **Select Course Number:** Choose from available numbers for that prefix

**Results show all sections for your course with:**

- **CRN:** Course Reference Number
- **Type:** Class type (Lecture, Tutorial, etc.)
- **Students:** Enrollment capacity
- **Dates:** When the course runs
- **Room:** Location
- **Start/Finish:** Class times
- **Days:** Days of the week the class meets

*Data from: 2026 Academic Timetable - DRAFT 1 - 20250827*

:::

:::

```{js, echo=FALSE}
// Pass R data to JavaScript
const timetableData = `r toJSON(timetable_df, pretty = FALSE)`;
const coursePrefixes = `r toJSON(unique_prefixes, pretty = FALSE)`;

// Parse the JSON data
const data = JSON.parse(timetableData);
const prefixes = JSON.parse(coursePrefixes);

// Initialize interface when page loads
document.addEventListener('DOMContentLoaded', function() {
    initializeInterface();
});

function initializeInterface() {
    // Populate course prefixes
    const prefixSelect = document.getElementById('coursePrefix');
    prefixes.forEach(prefix => {
        const option = document.createElement('option');
        option.value = prefix;
        option.textContent = prefix;
        prefixSelect.appendChild(option);
    });

    // Event listeners
    document.getElementById('fullCourseCode').addEventListener('input', handleFullCourseInput);
    document.getElementById('coursePrefix').addEventListener('change', handlePrefixChange);
    document.getElementById('courseNumber').addEventListener('change', handleNumberChange);
    
    // Initialize header
    updateHeader('Enter a course code or select from dropdowns to view timetable information');
}

function handleFullCourseInput() {
    const fullCode = document.getElementById('fullCourseCode').value.trim();
    
    if (fullCode) {
        // Clear dropdowns
        document.getElementById('coursePrefix').value = '';
        document.getElementById('courseNumber').value = '';
        document.getElementById('courseNumber').disabled = true;
        
        searchCourse(fullCode.toUpperCase());
    } else {
        clearResults();
    }
}

function handlePrefixChange() {
    const prefix = document.getElementById('coursePrefix').value;
    const numberSelect = document.getElementById('courseNumber');
    
    // Clear full course code input
    document.getElementById('fullCourseCode').value = '';
    
    if (prefix) {
        // Get available numbers for this prefix
        const availableNumbers = [...new Set(
            data
                .filter(course => course.course.startsWith(prefix))
                .map(course => course.course.substring(4))
        )].sort();
        
        // Populate number dropdown
        numberSelect.innerHTML = '<option value="">Select...</option>';
        availableNumbers.forEach(number => {
            const option = document.createElement('option');
            option.value = number;
            option.textContent = number;
            numberSelect.appendChild(option);
        });
        
        numberSelect.disabled = false;
    } else {
        numberSelect.innerHTML = '<option value="">Select...</option>';
        numberSelect.disabled = true;
        clearResults();
    }
}

function handleNumberChange() {
    const prefix = document.getElementById('coursePrefix').value;
    const number = document.getElementById('courseNumber').value;
    
    if (prefix && number) {
        searchCourse(prefix + number);
    } else {
        clearResults();
    }
}

function searchCourse(courseCode) {
    const matchingCourses = data.filter(course => 
        course.course.toUpperCase() === courseCode.toUpperCase()
    );
    
    if (matchingCourses.length > 0) {
        updateHeader(`Course Information for ${courseCode.toUpperCase()}`);
        updateTable(matchingCourses);
        document.getElementById('noResults').style.display = 'none';
    } else {
        updateHeader(`No results found for ${courseCode.toUpperCase()}`);
        clearTable();
        document.getElementById('noResults').style.display = 'block';
    }
}

function updateTable(courses) {
    // Get the DataTable instance
    const table = $('#courseTable').DataTable();
    
    // Clear and add new data
    table.clear();
    courses.forEach(course => {
        table.row.add([
            course.crn,
            course.type,
            course.stu,
            course.dates,
            course.room,
            course.start,
            course.finish,
            course.days
        ]);
    });
    table.draw();
    
    // Show table
    document.getElementById('courseTable').style.display = 'table';
}

function clearTable() {
    const table = $('#courseTable').DataTable();
    table.clear().draw();
    document.getElementById('courseTable').style.display = 'none';
}

function clearResults() {
    updateHeader('Enter a course code or select from dropdowns to view timetable information');
    clearTable();
    document.getElementById('noResults').style.display = 'none';
}

function updateHeader(text) {
    const header = document.querySelector('#courseHeader');
    if (header) {
        header.textContent = text;
    }
}
```